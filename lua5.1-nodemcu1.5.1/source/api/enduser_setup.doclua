-------------------------------------------------------------------------------
-- enduser setup module.
-- This module provides a simple way of configuring ESP8266 chips without using a serial interface or pre-programming WiFi credentials onto the chip.
-- @module enduser_setup


-------------------------------------------------------------------------------
-- Controls whether manual AP configuration is used.
-- By default the enduser_setup module automatically configures an open access point when starting, and stops it when the device has been successfully joined to a WiFi network.
-- If manual mode has been enabled, neither of this is done.
-- The device must be manually configured for wifi.SOFTAP mode prior to calling enduser\_setup.start().
-- Additionally, the portal is not stopped after the device has successfully joined to a WiFi network.
-- @function [parent=#enduser_setup] manual
-- @param #boolean on_off a boolean value indicating whether to use manual mode; if not given, the function only returns the current setting.
-- @return #boolean The current setting, true if manual mode is enabled, false if it is not.

-------------------------------------------------------------------------------
-- Starts the captive portal.
-- Syntax: enduser\_setup.start([onConnected()], [onError(err\_num, string)], [onDebug(string)])
-- @function [parent=#enduser_setup] start
-- @param #function onConnected callback will be fired when an IP-address has been obtained, just before the enduser_setup module will terminate itself
-- @param #function onError callback will be fired if an error is encountered. err\_num is a number describing the error, and string contains a description of the error.
-- @param #function onDebug callback is disabled by default. It is intended to be used to find internal issues in the module. string contains a description of what is going on.
-- @return #nil

-------------------------------------------------------------------------------
-- Stops the captive portal.
-- @function [parent=#enduser_setup] stop
-- @return #nil

return nil
