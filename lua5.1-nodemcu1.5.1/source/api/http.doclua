-------------------------------------------------------------------------------
-- http module.
-- Basic HTTP client module that provides an interface to do GET/POST/PUT/DELETE over HTTP(S), as well as customized requests.
-- Due to the memory constraints on ESP8266, the supported page/body size is limited by available memory.
-- It is not possible to execute concurrent HTTP requests using this module.
-- Starting a new request before the previous has completed will result in undefined behavior.
-- @module http


-------------------------------------------------------------------------------
-- Executes a HTTP DELETE request.
-- Note that concurrent requests are not supported.
-- @function [parent=#http] delete
-- @param #string url The URL to fetch, including the http:// or https:// prefix
-- @param #string headers Optional additional headers to append, including \\r\\n; may be nil
-- @param #string body The body to post; must already be encoded in the appropriate format, but may be empty
-- @param #function callback The callback function to be invoked when the response has been received; it is invoked with the arguments status\_code and body
-- @return #nil

-------------------------------------------------------------------------------
-- Executes a HTTP GET request.
-- Note that concurrent requests are not supported.
-- @function [parent=#http] get
-- @param #string url The URL to fetch, including the http:// or https:// prefix
-- @param #string headers Optional additional headers to append, including \\r\\n; may be nil
-- @param #function callback The callback function to be invoked when the response has been received; it is invoked with the arguments status\_code and body
-- @return #nil

-------------------------------------------------------------------------------
-- Executes a HTTP POST request.
-- Note that concurrent requests are not supported.
-- @function [parent=#http] post
-- @param #string url The URL to fetch, including the http:// or https:// prefix
-- @param #string headers Optional additional headers to append, including \\r\\n; may be nil
-- @param #string body The body to post; must already be encoded in the appropriate format, but may be empty
-- @param #function callback The callback function to be invoked when the response has been received; it is invoked with the arguments status\_code and body
-- @return #nil

-------------------------------------------------------------------------------
-- Executes a HTTP PUT request.
-- Note that concurrent requests are not supported.
-- @function [parent=#http] put
-- @param #string url The URL to fetch, including the http:// or https:// prefix
-- @param #string headers Optional additional headers to append, including \\r\\n; may be nil
-- @param #string body The body to post; must already be encoded in the appropriate format, but may be empty
-- @param #function callback The callback function to be invoked when the response has been received; it is invoked with the arguments status\_code and body
-- @return #nil

-------------------------------------------------------------------------------
-- Execute a custom HTTP request for any HTTP method.
-- Note that concurrent requests are not supported.
-- @function [parent=#http] request
-- @param #string url The URL to fetch, including the http:// or https:// prefix
-- @param #string method The HTTP method to use, e.g. "GET", "HEAD", "OPTIONS" etc.
-- @param #string headers Optional additional headers to append, including \\r\\n; may be nil
-- @param #string body The body to post; must already be encoded in the appropriate format, but may be empty
-- @param #function callback The callback function to be invoked when the response has been received; it is invoked with the arguments status\_code and body
-- @return #nil

return nil
